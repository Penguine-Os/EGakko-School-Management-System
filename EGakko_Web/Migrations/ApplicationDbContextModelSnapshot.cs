// <auto-generated />
using System;
using EGakko_DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EGakko_Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EGakko_Models.ActivityEvaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Activity")
                        .HasColumnType("int");

                    b.Property<int>("FieldSubjectId")
                        .HasColumnType("int");

                    b.Property<int>("MaxScore")
                        .HasColumnType("int");

                    b.Property<string>("Summery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FieldSubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ActivityEvaluations");
                });

            modelBuilder.Entity("EGakko_Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("EGakko_Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("EGakko_Models.ClassRoomLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("ClassRoomName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("EGakko_Models.ClassSchedule", b =>
                {
                    b.Property<int>("FieldSubjectId")
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("FieldSubjectId", "ClassId");

                    b.HasIndex("ClassId");

                    b.HasIndex("LocationId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ClassSchedules");
                });

            modelBuilder.Entity("EGakko_Models.CustomUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("EGakko_Models.FieldSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<int>("HoursPerWeek")
                        .HasColumnType("int");

                    b.Property<bool>("IsCoreSubject")
                        .HasColumnType("bit");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("SubjectId");

                    b.ToTable("FieldSubjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FieldId = 1,
                            HoursPerWeek = 5,
                            IsCoreSubject = true,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            FieldId = 1,
                            HoursPerWeek = 4,
                            IsCoreSubject = true,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 3,
                            FieldId = 1,
                            HoursPerWeek = 3,
                            IsCoreSubject = false,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 4,
                            FieldId = 1,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 45
                        },
                        new
                        {
                            Id = 5,
                            FieldId = 1,
                            HoursPerWeek = 5,
                            IsCoreSubject = true,
                            SubjectId = 7
                        },
                        new
                        {
                            Id = 6,
                            FieldId = 1,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 8
                        },
                        new
                        {
                            Id = 7,
                            FieldId = 1,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 9
                        },
                        new
                        {
                            Id = 8,
                            FieldId = 1,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 10
                        },
                        new
                        {
                            Id = 9,
                            FieldId = 1,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 11
                        },
                        new
                        {
                            Id = 10,
                            FieldId = 1,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 12
                        },
                        new
                        {
                            Id = 11,
                            FieldId = 1,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 13
                        },
                        new
                        {
                            Id = 12,
                            FieldId = 1,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 14
                        },
                        new
                        {
                            Id = 13,
                            FieldId = 2,
                            HoursPerWeek = 3,
                            IsCoreSubject = false,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 14,
                            FieldId = 2,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 15,
                            FieldId = 2,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 16,
                            FieldId = 2,
                            HoursPerWeek = 4,
                            IsCoreSubject = true,
                            SubjectId = 7
                        },
                        new
                        {
                            Id = 17,
                            FieldId = 2,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 8
                        },
                        new
                        {
                            Id = 18,
                            FieldId = 2,
                            HoursPerWeek = 1,
                            IsCoreSubject = false,
                            SubjectId = 9
                        },
                        new
                        {
                            Id = 19,
                            FieldId = 2,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 13
                        },
                        new
                        {
                            Id = 20,
                            FieldId = 2,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 14
                        },
                        new
                        {
                            Id = 21,
                            FieldId = 2,
                            HoursPerWeek = 3,
                            IsCoreSubject = false,
                            SubjectId = 10
                        },
                        new
                        {
                            Id = 22,
                            FieldId = 2,
                            HoursPerWeek = 3,
                            IsCoreSubject = false,
                            SubjectId = 15
                        },
                        new
                        {
                            Id = 23,
                            FieldId = 2,
                            HoursPerWeek = 3,
                            IsCoreSubject = false,
                            SubjectId = 16
                        },
                        new
                        {
                            Id = 24,
                            FieldId = 2,
                            HoursPerWeek = 3,
                            IsCoreSubject = false,
                            SubjectId = 17
                        },
                        new
                        {
                            Id = 25,
                            FieldId = 2,
                            HoursPerWeek = 3,
                            IsCoreSubject = false,
                            SubjectId = 18
                        },
                        new
                        {
                            Id = 26,
                            FieldId = 2,
                            HoursPerWeek = 1,
                            IsCoreSubject = false,
                            SubjectId = 19
                        },
                        new
                        {
                            Id = 27,
                            FieldId = 3,
                            HoursPerWeek = 5,
                            IsCoreSubject = true,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 28,
                            FieldId = 3,
                            HoursPerWeek = 3,
                            IsCoreSubject = false,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 29,
                            FieldId = 3,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 30,
                            FieldId = 3,
                            HoursPerWeek = 7,
                            IsCoreSubject = true,
                            SubjectId = 7
                        },
                        new
                        {
                            Id = 31,
                            FieldId = 3,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 8
                        },
                        new
                        {
                            Id = 32,
                            FieldId = 3,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 9
                        },
                        new
                        {
                            Id = 33,
                            FieldId = 3,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 13
                        },
                        new
                        {
                            Id = 34,
                            FieldId = 3,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 14
                        },
                        new
                        {
                            Id = 35,
                            FieldId = 3,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 10
                        },
                        new
                        {
                            Id = 36,
                            FieldId = 3,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 11
                        },
                        new
                        {
                            Id = 37,
                            FieldId = 3,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 12
                        },
                        new
                        {
                            Id = 38,
                            FieldId = 3,
                            HoursPerWeek = 1,
                            IsCoreSubject = false,
                            SubjectId = 20
                        },
                        new
                        {
                            Id = 39,
                            FieldId = 3,
                            HoursPerWeek = 1,
                            IsCoreSubject = false,
                            SubjectId = 21
                        },
                        new
                        {
                            Id = 40,
                            FieldId = 4,
                            HoursPerWeek = 5,
                            IsCoreSubject = true,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 41,
                            FieldId = 4,
                            HoursPerWeek = 3,
                            IsCoreSubject = false,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 42,
                            FieldId = 4,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 43,
                            FieldId = 4,
                            HoursPerWeek = 4,
                            IsCoreSubject = true,
                            SubjectId = 6
                        },
                        new
                        {
                            Id = 44,
                            FieldId = 4,
                            HoursPerWeek = 7,
                            IsCoreSubject = true,
                            SubjectId = 7
                        },
                        new
                        {
                            Id = 45,
                            FieldId = 4,
                            HoursPerWeek = 1,
                            IsCoreSubject = false,
                            SubjectId = 8
                        },
                        new
                        {
                            Id = 46,
                            FieldId = 4,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 9
                        },
                        new
                        {
                            Id = 47,
                            FieldId = 4,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 13
                        },
                        new
                        {
                            Id = 48,
                            FieldId = 4,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 14
                        },
                        new
                        {
                            Id = 49,
                            FieldId = 4,
                            HoursPerWeek = 1,
                            IsCoreSubject = false,
                            SubjectId = 10
                        },
                        new
                        {
                            Id = 50,
                            FieldId = 4,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 11
                        },
                        new
                        {
                            Id = 51,
                            FieldId = 4,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 12
                        },
                        new
                        {
                            Id = 52,
                            FieldId = 5,
                            HoursPerWeek = 5,
                            IsCoreSubject = true,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 53,
                            FieldId = 5,
                            HoursPerWeek = 4,
                            IsCoreSubject = false,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 54,
                            FieldId = 5,
                            HoursPerWeek = 3,
                            IsCoreSubject = false,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 55,
                            FieldId = 5,
                            HoursPerWeek = 4,
                            IsCoreSubject = true,
                            SubjectId = 6
                        },
                        new
                        {
                            Id = 56,
                            FieldId = 5,
                            HoursPerWeek = 3,
                            IsCoreSubject = true,
                            SubjectId = 7
                        },
                        new
                        {
                            Id = 57,
                            FieldId = 5,
                            HoursPerWeek = 1,
                            IsCoreSubject = false,
                            SubjectId = 8
                        },
                        new
                        {
                            Id = 58,
                            FieldId = 5,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 9
                        },
                        new
                        {
                            Id = 59,
                            FieldId = 5,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 13
                        },
                        new
                        {
                            Id = 60,
                            FieldId = 5,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 14
                        },
                        new
                        {
                            Id = 61,
                            FieldId = 5,
                            HoursPerWeek = 1,
                            IsCoreSubject = false,
                            SubjectId = 22
                        },
                        new
                        {
                            Id = 62,
                            FieldId = 5,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 23
                        },
                        new
                        {
                            Id = 63,
                            FieldId = 5,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 24
                        },
                        new
                        {
                            Id = 64,
                            FieldId = 5,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 45
                        },
                        new
                        {
                            Id = 65,
                            FieldId = 6,
                            HoursPerWeek = 5,
                            IsCoreSubject = true,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 66,
                            FieldId = 6,
                            HoursPerWeek = 3,
                            IsCoreSubject = false,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 67,
                            FieldId = 6,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 68,
                            FieldId = 6,
                            HoursPerWeek = 4,
                            IsCoreSubject = true,
                            SubjectId = 6
                        },
                        new
                        {
                            Id = 69,
                            FieldId = 6,
                            HoursPerWeek = 5,
                            IsCoreSubject = true,
                            SubjectId = 7
                        },
                        new
                        {
                            Id = 70,
                            FieldId = 6,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 8
                        },
                        new
                        {
                            Id = 71,
                            FieldId = 6,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 9
                        },
                        new
                        {
                            Id = 72,
                            FieldId = 6,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 13
                        },
                        new
                        {
                            Id = 73,
                            FieldId = 6,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 14
                        },
                        new
                        {
                            Id = 74,
                            FieldId = 6,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 10
                        },
                        new
                        {
                            Id = 75,
                            FieldId = 6,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 11
                        },
                        new
                        {
                            Id = 76,
                            FieldId = 6,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 12
                        },
                        new
                        {
                            Id = 77,
                            FieldId = 7,
                            HoursPerWeek = 5,
                            IsCoreSubject = true,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 78,
                            FieldId = 7,
                            HoursPerWeek = 3,
                            IsCoreSubject = false,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 79,
                            FieldId = 7,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 80,
                            FieldId = 7,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 45
                        },
                        new
                        {
                            Id = 81,
                            FieldId = 7,
                            HoursPerWeek = 3,
                            IsCoreSubject = false,
                            SubjectId = 7
                        },
                        new
                        {
                            Id = 82,
                            FieldId = 7,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 8
                        },
                        new
                        {
                            Id = 83,
                            FieldId = 7,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 9
                        },
                        new
                        {
                            Id = 84,
                            FieldId = 7,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 13
                        },
                        new
                        {
                            Id = 85,
                            FieldId = 7,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 14
                        },
                        new
                        {
                            Id = 86,
                            FieldId = 7,
                            HoursPerWeek = 1,
                            IsCoreSubject = false,
                            SubjectId = 23
                        },
                        new
                        {
                            Id = 87,
                            FieldId = 7,
                            HoursPerWeek = 4,
                            IsCoreSubject = true,
                            SubjectId = 25
                        },
                        new
                        {
                            Id = 88,
                            FieldId = 7,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 24
                        },
                        new
                        {
                            Id = 89,
                            FieldId = 7,
                            HoursPerWeek = 3,
                            IsCoreSubject = false,
                            SubjectId = 26
                        },
                        new
                        {
                            Id = 90,
                            FieldId = 2,
                            HoursPerWeek = 4,
                            IsCoreSubject = false,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 91,
                            FieldId = 2,
                            HoursPerWeek = 3,
                            IsCoreSubject = false,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 92,
                            FieldId = 2,
                            HoursPerWeek = 3,
                            IsCoreSubject = false,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 93,
                            FieldId = 2,
                            HoursPerWeek = 2,
                            IsCoreSubject = true,
                            SubjectId = 7
                        },
                        new
                        {
                            Id = 94,
                            FieldId = 2,
                            HoursPerWeek = 1,
                            IsCoreSubject = false,
                            SubjectId = 8
                        },
                        new
                        {
                            Id = 95,
                            FieldId = 2,
                            HoursPerWeek = 1,
                            IsCoreSubject = false,
                            SubjectId = 9
                        },
                        new
                        {
                            Id = 96,
                            FieldId = 2,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 13
                        },
                        new
                        {
                            Id = 97,
                            FieldId = 2,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 14
                        },
                        new
                        {
                            Id = 98,
                            FieldId = 2,
                            HoursPerWeek = 1,
                            IsCoreSubject = false,
                            SubjectId = 24
                        },
                        new
                        {
                            Id = 99,
                            FieldId = 2,
                            HoursPerWeek = 3,
                            IsCoreSubject = false,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 100,
                            FieldId = 2,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 28
                        },
                        new
                        {
                            Id = 101,
                            FieldId = 2,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 29
                        },
                        new
                        {
                            Id = 102,
                            FieldId = 2,
                            HoursPerWeek = 2,
                            IsCoreSubject = false,
                            SubjectId = 30
                        },
                        new
                        {
                            Id = 103,
                            FieldId = 2,
                            HoursPerWeek = 7,
                            IsCoreSubject = false,
                            SubjectId = 31
                        },
                        new
                        {
                            Id = 104,
                            FieldId = 2,
                            HoursPerWeek = 1,
                            IsCoreSubject = false,
                            SubjectId = 19
                        });
                });

            modelBuilder.Entity("EGakko_Models.Result", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("EvaluationId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalScore")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("StudentId", "EvaluationId");

                    b.HasIndex("EvaluationId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("EGakko_Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("CustomUserIdStudent")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FeesArePayed")
                        .HasColumnType("bit");

                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("CustomUserIdStudent");

                    b.HasIndex("FieldId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EGakko_Models.StudyField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradeLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudyFields");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GradeLevel = "3rd Degree",
                            Name = "Modern Language-Sciences"
                        },
                        new
                        {
                            Id = 2,
                            GradeLevel = "3rd Degree",
                            Name = "Engineering Sciences"
                        },
                        new
                        {
                            Id = 3,
                            GradeLevel = "3rd Degree",
                            Name = "Science Mathematics"
                        },
                        new
                        {
                            Id = 4,
                            GradeLevel = "3rd Degree",
                            Name = "Latin mathematics"
                        },
                        new
                        {
                            Id = 5,
                            GradeLevel = "3rd Degree",
                            Name = "Latin - Modern Languages"
                        },
                        new
                        {
                            Id = 6,
                            GradeLevel = "3rd Degree",
                            Name = "latin -  Sciences"
                        },
                        new
                        {
                            Id = 7,
                            GradeLevel = "3rd Degree",
                            Name = "Human Sciences"
                        },
                        new
                        {
                            Id = 8,
                            GradeLevel = "3rd Degree",
                            Name = "Tourism"
                        },
                        new
                        {
                            Id = 9,
                            GradeLevel = "3rd Degree",
                            Name = "Economics - Mathematics"
                        },
                        new
                        {
                            Id = 10,
                            GradeLevel = "3rd Degree",
                            Name = "Economy - Modern Languages"
                        },
                        new
                        {
                            Id = 11,
                            GradeLevel = "3rd Degree",
                            Name = "Commerce"
                        },
                        new
                        {
                            Id = 12,
                            GradeLevel = "3rd Degree",
                            Name = "Logistical Maritime Administration"
                        });
                });

            modelBuilder.Entity("EGakko_Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dutch"
                        },
                        new
                        {
                            Id = 2,
                            Name = "French"
                        },
                        new
                        {
                            Id = 3,
                            Name = "English"
                        },
                        new
                        {
                            Id = 4,
                            Name = "German"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Spanish"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Latin"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Geography"
                        },
                        new
                        {
                            Id = 9,
                            Name = "History"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Biology"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Chemistry"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Physics"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Philosophical subjects"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Physical education"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Applied biochemistry"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Applied chemistry"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Applied physics"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Applied ecology"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Applied computer science"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Scientific work physics"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Scientific work chemistry"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Research competencies"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Seminar"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Natural sciences"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Behavioral sciences"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Cultural sciences"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Human geography"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Touristic culture"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Touristic organization"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Touristic spaces"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Internship"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Economics"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Economics law"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Logistics and maritime cases"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Applied computer science - Dactylo"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Accounting"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Law"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Business Economics"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Economic Geography"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Sales"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Economics seminar"
                        },
                        new
                        {
                            Id = 42,
                            Name = "PAV"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Applied Economics: Law"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Introduction to International Trade"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Duits/Spaans"
                        });
                });

            modelBuilder.Entity("EGakko_Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomUserIdTeacher")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiplomaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("CustomUserIdTeacher");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("EGakko_Models.TeacherSubject", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("SubjectId", "TeacherId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherSubjects");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("EGakko_Models.ActivityEvaluation", b =>
                {
                    b.HasOne("EGakko_Models.FieldSubject", "FieldSubject")
                        .WithMany()
                        .HasForeignKey("FieldSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EGakko_Models.Teacher", "Teacher")
                        .WithMany("ActivityEvaluations")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EGakko_Models.Attendance", b =>
                {
                    b.HasOne("EGakko_Models.Student", "Student")
                        .WithMany("ListOfAttendance")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EGakko_Models.ClassSchedule", b =>
                {
                    b.HasOne("EGakko_Models.Class", "Class")
                        .WithMany("ClassSchedules")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EGakko_Models.FieldSubject", "FieldSubject")
                        .WithMany("ClassSchedules")
                        .HasForeignKey("FieldSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EGakko_Models.ClassRoomLocation", "Location")
                        .WithMany("ClassSchedules")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EGakko_Models.Teacher", "Teacher")
                        .WithMany("ClassSchedules")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EGakko_Models.FieldSubject", b =>
                {
                    b.HasOne("EGakko_Models.StudyField", "Field")
                        .WithMany("FieldSubjects")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EGakko_Models.Subject", "Subject")
                        .WithMany("FieldSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EGakko_Models.Result", b =>
                {
                    b.HasOne("EGakko_Models.ActivityEvaluation", "ActivityEvaluation")
                        .WithMany("Results")
                        .HasForeignKey("EvaluationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EGakko_Models.Student", "Student")
                        .WithMany("Results")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("EGakko_Models.Student", b =>
                {
                    b.HasOne("EGakko_Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EGakko_Models.CustomUser", "CustomUserStudent")
                        .WithMany()
                        .HasForeignKey("CustomUserIdStudent");

                    b.HasOne("EGakko_Models.StudyField", "Field")
                        .WithMany("Students")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EGakko_Models.Teacher", b =>
                {
                    b.HasOne("EGakko_Models.CustomUser", "CustomUserTeacher")
                        .WithMany()
                        .HasForeignKey("CustomUserIdTeacher");
                });

            modelBuilder.Entity("EGakko_Models.TeacherSubject", b =>
                {
                    b.HasOne("EGakko_Models.Subject", "Subject")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EGakko_Models.Teacher", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EGakko_Models.CustomUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EGakko_Models.CustomUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EGakko_Models.CustomUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EGakko_Models.CustomUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
